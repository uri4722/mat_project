/**
 * Hebrew months of the year (NISAN=1, TISHREI=7)
 * @readonly
 * @enum {number}
 */
export declare const months: {
    /** Nissan / ניסן */
    NISAN: number;
    /** Iyyar / אייר */
    IYYAR: number;
    /** Sivan / סיון */
    SIVAN: number;
    /** Tamuz (sometimes Tammuz) / תמוז */
    TAMUZ: number;
    /** Av / אב */
    AV: number;
    /** Elul / אלול */
    ELUL: number;
    /** Tishrei / תִּשְׁרֵי */
    TISHREI: number;
    /** Cheshvan / חשון */
    CHESHVAN: number;
    /** Kislev / כסלו */
    KISLEV: number;
    /** Tevet / טבת */
    TEVET: number;
    /** Sh'vat / שבט */
    SHVAT: number;
    /** Adar or Adar Rishon / אדר */
    ADAR_I: number;
    /** Adar Sheini (only on leap years) / אדר ב׳ */
    ADAR_II: number;
};
/**
 * Converts Hebrew date to R.D. (Rata Die) fixed days.
 * R.D. 1 is the imaginary date Monday, January 1, 1 on the Gregorian
 * Calendar.
 * @param {number} year Hebrew year
 * @param {number} month Hebrew month
 * @param {number} day Hebrew date (1-30)
 * @return {number}
 */
export declare function hebrew2abs(year: number, month: number, day: number): number;
export type SimpleHebrewDate = {
    /** Hebrew year */
    yy: number;
    /** Hebrew month of year (1=NISAN, 7=TISHREI) */
    mm: number;
    /** Day of month (1-30) */
    dd: number;
};
/**
 * Converts absolute R.D. days to Hebrew date
 * @param {number} abs absolute R.D. days
 * @return {SimpleHebrewDate}
 */
export declare function abs2hebrew(abs: number): SimpleHebrewDate;
/**
 * Returns true if Hebrew year is a leap year
 * @param {number} year Hebrew year
 * @return {boolean}
 */
export declare function isLeapYear(year: number): boolean;
/**
 * Number of months in this Hebrew year (either 12 or 13 depending on leap year)
 * @param {number} year Hebrew year
 * @return {number}
 */
export declare function monthsInYear(year: number): number;
/**
 * Number of days in Hebrew month in a given year (29 or 30)
 * @param {number} month Hebrew month (e.g. months.TISHREI)
 * @param {number} year Hebrew year
 * @return {number}
 */
export declare function daysInMonth(month: number, year: number): number;
/**
 * Returns a transliterated string name of Hebrew month in year,
 * for example 'Elul' or 'Cheshvan'.
 * @param {number} month Hebrew month (e.g. months.TISHREI)
 * @param {number} year Hebrew year
 */
export declare function getMonthName(month: number, year: number): string;
/**
 * Days from sunday prior to start of Hebrew calendar to mean
 * conjunction of Tishrei in Hebrew YEAR
 * @param {number} year Hebrew year
 * @return {number}
 */
export declare function elapsedDays(year: number): number;
/**
 * Number of days in the hebrew YEAR.
 * A common Hebrew calendar year can have a length of 353, 354 or 355 days
 * A leap Hebrew calendar year can have a length of 383, 384 or 385 days
 * @param {number} year Hebrew year
 * @return {number}
 */
export declare function daysInYear(year: number): number;
/**
 * true if Cheshvan is long in Hebrew year
 * @param {number} year Hebrew year
 * @return {boolean}
 */
export declare function longCheshvan(year: number): boolean;
/**
 * true if Kislev is short in Hebrew year
 * @param {number} year Hebrew year
 * @return {boolean}
 */
export declare function shortKislev(year: number): boolean;
/**
 * Converts Hebrew month string name to numeric
 * @param {string} monthName monthName
 * @return {number}
 */
export declare function monthFromName(monthName: string): number;
